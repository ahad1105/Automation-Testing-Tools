package contactListAPI;

import static io.restassured.RestAssured.given;

import org.json.simple.JSONObject;
import org.testng.annotations.Test;

public class PositiveTesting {
	String id;
  @Test(enabled=false,description="Getting all contacts information")
  public void gettingAllContact() {
	  given()
	   .when()
	   	 .get("http://3.13.86.142:3000/contacts")
	   .then()
	      .log()
	      .body()
	      .statusCode(200);
	  
  }
  @Test(enabled=true,description="Adding new Contact")
  public void AddingnewContact() {
	  JSONObject param=new JSONObject();
	  JSONObject loc=new JSONObject();
	  JSONObject employer=new JSONObject();
	  loc.put("city","Mumbai");
	  loc.put("Country","India");
	  
	  employer.put("jobTitle","QA");
	  employer.put("Company","LTI");
	  
	  param.put("firstName", "ZED");
	  param.put("lastName", "Royal");
	  param.put("email", "pannaroy05@gmail.com");
	  param.put("location", loc);
	  param.put("employer", employer);
	 id= given()
			 			.header("Content-Type","application/json")
			 			.body(param.toJSONString())
	     .when()
	   	 				.post("http://3.13.86.142:3000/contacts")
	   	 .then()
	   	 	.log()
	   	 	.body()
	   	 	.statusCode(200)
	   	 	.extract()
	   	 	.path("_id");
	      System.out.println("ID is "+id);
	  
  }
  @Test(enabled=true,dependsOnMethods="AddingnewContact",description="Updating Contact")
  public void updatingContact() {
	  JSONObject param=new JSONObject();
	  JSONObject loc=new JSONObject();
	  JSONObject employer=new JSONObject();
	  loc.put("city","Mumbai");
	  loc.put("Country","India");
	  
	  employer.put("jobTitle","QA");
	  employer.put("Company","LTI");
	  
	  param.put("firstName", "ZED");
	  param.put("lastName", "Royal");
	  param.put("email", "pannaroy05@gmail.com");
	  param.put("location", loc);
	  param.put("employer", employer);
	  
	 given()
			 .header("Content-Type","application/json")
			 .body(param.toJSONString())
	     .when()
	   	 	 .put("http://3.13.86.142:3000/contacts/"+id)
	   	 .then()
	   	 	.log()
	   	 	.body()
	   	 	.statusCode(204);
	   	 	
	  
  }
  @Test(enabled=true,dependsOnMethods="updatingContact",description="Specific content")
  public void gettingSpecificContact() {
	 
	  given()
	     .when()
	   	 	 .get("http://3.13.86.142:3000/contacts/"+id)
	   	 .then()
	   	 	.log()
	   	 	.body()
	   	 	.statusCode(200);
	   	 	
	  
  }
  @Test(enabled=true,dependsOnMethods="gettingSpecificContact",description="delete content")
  public void deleteContact() {
	 
	  given()
	     .when()
	   	 	 .delete("http://3.13.86.142:3000/contacts/"+id)
	   	 .then()
	   	 	.log()
	   	 	.body()
	   	 	.statusCode(204);
	   	 	
	  
  }
}
